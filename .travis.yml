sudo: required
services:
  - docker
env:
  global:
    - REGISTRY_USER=travisbot
    - BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
    - REPO=ucscbailey/embed
    - secure: X6boInCNKkZpZMGx/ws/knFDQAUctuhIEv8vHFcX9q7DOl0DfI72ytVDBfvSIXsJwxlAhn7+pr43tvXhR7SgzuI2jHCtP1GzF4iVjTPw0chVnSEc5uWnYPePUc/CyX3WP5BnqJUKzEYqVLkMi/pqiff/mDV74Ko5Bp4RgE9+rKLg31T9Xp86UMgETNMCr48e/Edbvpu9OzTgEWKeCyODbZmfo7HhKneON2rLPz0kHBGTePFKjAZ9Zz+dOXK8Qfxzkf4pYDPC/M9yBAZVzqonhW1yd9bd2RRk5aIir6UqDM3OEqtNOcBYWdovxfNydvwk6lPRsTJMZ5HadYruJiX/vqeK0fepC3lmCl4EAV20uHTpX0VXC19j/kgd4SwyFFCjLrG7ADeCClTssDgmkaSf8dKHimBIXm/4q9GEzaPK4Jk2YGQOEvpN0OHkUEWFcQ8XJF33gBUl+nUMQ0RO3ZLOhWpzbOxCKHSPFKEIvpX8Yn5bxk1pD2AgGiVxEPblKgeuT7EBCPJrL1fwKyfr/LWKCrOPxbRrbfDsYmbLPk9ErIyQ3zqPE0mpofdMaCNvgghhp9xEWTCT6elbpof4d6vkOhKwlUPHzeHyAWA1Sq0kF8IEJk+HqIf5HGiHsJpoS2w+sDANu48KO2LhdBTMfEuwCJuSu43/3W9JY2CtXBLizX8=
notifications:
  slack:
    secure: izQuWHVK+LWJKH9T8m/8iQHeONpwdW3qA1qFqImgYuCLKlpiS/69t9fuTPZ8E+YYGqRq6aZ/yr5wF/Cau3nx0fEGDiZJPcWk++pp6g9mpsua+8egKxsSV2RbGokCUHF7xs15/PCbh84QLXPJVyDSpisqtSF9HvxJ8FV+U8AIOAM3XYmRRaSPhe8e4HP6HCPTtJQdD8W8Cj3LEo+kugY4En0iY+zNFPoiYiJhADhJIfzymDUJbAuo4uWtc1GBn+UHVz26orzymDSDiGSAyVzQRgrbZznts516ZQ7to1uQ45qfqJEJhtkoL//FzEcCqd79juCkHAVQt9jvsq9LTaRDbGxyfLFaiBPaKDL9oErTlHbpyPMSOIpR8CPvo/E/bBUeZjsMHbE8tdz5WOpAiTE2VpziS66RDt6KHsPNWxxBrUsF8s92TV3FMI7FhiwzbIzGxaHr/APZmUJf6588SxGdLO7ek/yJL1IWoxh7TCjdfRZMzw9oWxykqvlUIBI3eHn6E0IAHH2q70Vuq8y4zJvrr3JpEYj+mWdoN19uNAjZqJr+xwwi0cO7MAhr+SnaxMP29wwuymCRyXBVuz/1EcKpHEh3w3rAnnVQ6xhvEjST7LmQ8pp9WjCrfglRGMQMQUnpGqxxxb9fRlfAz/GzgDAjlEhQWNX05vwO0f5PNcKuG4w=
  email: false
language: generic

jobs:
  include:
    - os: linux
      dist: bionic


before_install:
#  docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - echo '{"features":{ "buildkit":true },"experimental":true}'  | sudo tee /etc/docker/daemon.json
  - sudo service docker restart
  - 'if [ "${BRANCH}" = "master" ]; then
      export BRANCH="latest";
    else
      echo "Strings are not equal.";
    fi'
  - echo BRANCH "$BRANCH"


before_script:
  - docker --version
  - docker version -f '{{.Server.Experimental}}'
  - docker pull $REPO || true
script:
  - cp Docker/Dockerfile .
  - export DOCKER_BUILDKIT=1
  - docker build --progress=plain --target test --pull --cache-from $REPO:$BRANCH .
  - docker build -q --target runtime --tag $REPO:$BRANCH .
  - docker run $REPO:$BRANCH
  - rm Dockerfile
before_deploy:
  - echo "$REGISTRY_PASS" | docker login --username $REGISTRY_USER --password-stdin
deploy:
  provider: script
  script: docker push $REPO:$BRANCH
  on:
    all_branches: true

